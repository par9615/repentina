


/* VALORES EN HEXA PARA MOSTRAR LOS NUMEROS EN EL DISPLAY */

CERO   EQU 040H
UNO    EQU 079H
DOS    EQU 024H
TRES   EQU 030H
CUATRO EQU 019H
CINCO  EQU 012H
SEIS   EQU 003H
SIETE  EQU 078H
OCHO   EQU 000H
NUEVE  EQU 018H

/* DIRECCIONES PARA LOS CALCULOS INTERNOS DE LAS HORAS */

HORC1 EQU 030H
HORC0 EQU 031H
MINC1 EQU 032H
MINC0 EQU 033H
SEGC1 EQU 034H
SEGC0 EQU 035H
HORCAUX EQU 036H

/* DIRECCIONES DEL DISPLAY DE ACTUALIZACIONES */
HORA1 EQU 038H
HORA0 EQU 039H
MINA1 EQU 03AH
MINA0 EQU 03BH
SEGA1 EQU 03CH
SEGA0 EQU 03DH

/* DIRECIONES DEL DISPLAY REAL */
HORR1 EQU 03EH
HORR0 EQU 03FH
MINR1 EQU 040H
MINR0 EQU 041H
SEGR1 EQU 042H
SEGR0 EQU 043H

/* SELECTOR DEL DISPLAY */
DISP_SEL EQU 037H

/*DIRECCIONES TIMER 2*/
T2CON EQU 00C8H
RCAP2L EQU 00CAH
RCAP2H EQU 00CBH
TL2 EQU 00CCH
TH2 EQU 00CDH
TF2 EQU 00CFH
	
/*DIRECCIONES DE CONTADORES DE S,M,H */


/* AUXILIAR DEL ACUMULADOR PARA NO PERDER SU VALOR DURANTE UNA SUBRUTINA */
AAUX EQU 044H
	
	
/* CONTADORES */
CUENTA20 EQU 0045H
CUENTA20_2 EQU 0046H

/* ================= VECTORES DE INTERRUPCION ========================= */
ORG 0000H
	JMP INICIALIZAR
 
/*ORG 0003H
	JMP IEXT0*/
	
ORG 000BH
	JMP ITIM0

/*ORG 0013H
	JMP IEXT1

ORG 001BH
	JMP ITIM1*/

ORG 002BH
	CLR TF2
	JMP ITIM2
/* ================= VALORES INICIALES ========================= */

/* VALORES INICIALES DE LA HORA PARA CALCULOS (12:00:00) */

INICIALIZAR: 
MOV HORC1, #00H
MOV HORC0, #09H
MOV MINC1, #05H
MOV MINC0, #09H
MOV SEGC1, #04H
MOV SEGC0, #00H

/* VALORES INICIALES DE LA HORA PARA EL DISPLAY DE ACTUALIZACIONES */
MOV HORA1, #CERO
MOV HORA0, #NUEVE
MOV MINA1, #CINCO
MOV MINA0, #NUEVE
MOV SEGA1, #CUATRO
MOV SEGA0, #CERO

/* VALORES INICIALES DE LA HORA PARA EL DISPLAY REAL */
MOV HORR1, #CERO
MOV HORR0, #CERO
MOV MINR1, #CERO
MOV MINR0, #CERO
MOV SEGR1, #CERO
MOV SEGR0, #CERO

/* VALORES INICIALES DE LOS REGISTROS */
MOV R2, #00H
MOV R3, #00H
MOV R4, #00H
MOV R5, #00H
MOV R6, #00H
MOV R7, #00H

/* VALORES INICIALES DEL AUXILIAR Y EL SELECTOR DEL DISPLAY */
MOV DISP_SEL, #00H
MOV AAUX, #00H


/* ================= TIMER 2 ========================= */


/*INICIALIZAR TIMER 2*/
MOV RCAP2H, #HIGH(-50000); CUENTE 500MS PARTE ALTA
MOV RCAP2L, #LOW(-50000)
MOV TH2, #HIGH(-50000)
MOV TL2, #LOW(-50000)
MOV T2CON, #00000100B



/* ================= TIMER 0 Y 1 ========================= */
/* INICIALIZAR TIMER 0 Y 1
- T0 EN AUTO DE 8, T1 EN AUTO DE 8
- VALORES DE CONTROL
- INTERRUPCIONES
- FALTA IP
*/
MOV TMOD, #22H 
MOV TCON, #00h ; NADA HABILITADO
MOV IE, #10101111B
MOV IP, #00101000B ; PRIORIDAD T2 Y T1, NO SE INTERRUMPEN

/* VALORES INICIALES PARA TIMER 0 Y 1 CON AUTORECARGA */
/*MOV TH1, #-200
MOV TL1, #-200
SETB TR1 ;INICIA TIMER 1*/
MOV DPTR, #1000H ;INICIALIZAR DPTR EN LA TABLA BCD

MOV TH0, #-200 
MOV TL0, #-200
SETB TR0

/*VALORES INICIALES PARA VARIABLES DE TIMERS*/
MOV CUENTA20, #00H
MOV CUENTA20_2, #00H
MOV R0, #CUENTA20
MOV R1, #CUENTA20_2

/* ================================================ */
/* =                                              = */
/* =                    MAIN                      = */
/* =                                              = */
/* ================================================ */

/* ================= INTERRUPCIONES ========================= */

MAIN:
SJMP $
	
	
ITIM2:
		INC CUENTA20
		CJNE @R0, #020D, FIN_ITIM2 
		
		INC SEGC0		
		MOV CUENTA20, #00H
		LCALL INCRELOJ	
		
	
	
		FIN_ITIM2: RETI
	
/*ITIM1:
	RETI*/

ITIM0:
	INC CUENTA20_2
	CJNE @R1, #020D, FIN_ITIM0 
	LCALL REFRESH
	MOV CUENTA20_2, #00H
	FIN_ITIM0: RETI

/* ================= SUBRUTINAS ========================= */

/* SUBRUTINA PARA EL REFRESH DEL DISPLAY (CADA 4ms) */
REFRESH: MOV AAUX, A
		 MOV A, DISP_SEL
		 
		 CASE0: CJNE A,#00H, CASE1
			MOV A, SEGC0
			LCALL BCDTOA
			MOV SEGA0, A
			MOV P0,#11111110B
			; ESTADOS
			; MOV A, SEGR0
			JMP FIN_REFRESH
				
		 CASE1: CJNE A,#01H, CASE2
			MOV A, SEGC1
			LCALL BCDTOA
			MOV SEGA1, A
			MOV P0,#11111101B
			JMP FIN_REFRESH
				
		 CASE2: CJNE A,#02H, CASE3
			MOV A, MINC0
			LCALL BCDTOA
			MOV MINA0, A
			MOV P0,#11111011B
			JMP FIN_REFRESH
				
		 CASE3: CJNE A,#03H, CASE4
			MOV A, MINC1
			LCALL BCDTOA
			MOV MINA1, A
			MOV P0,#11110111B
			JMP FIN_REFRESH
				
		 CASE4: CJNE A,#04H, CASE5
			MOV A, HORC0
			LCALL BCDTOA
			MOV HORA0, A
			MOV P0,#11101111B
			JMP FIN_REFRESH
				
		 CASE5:	MOV DISP_SEL, #00H
			MOV A, HORC1
			CJNE A, #00H, FIN_REFRESH
			LCALL BCDTOA
			MOV HORA1, A
			MOV P0,#11011111B
			JMP RST_REFRESH
		
		FIN_REFRESH: INC DISP_SEL 
		RST_REFRESH: MOV P2, A
			     MOV A, AAUX
			     RET

/* BCD */
BCDTOA: MOVC A,@A + DPTR
	RET

/* INCREMENTAR SEGUNDOS*/
INCRELOJ: MOV AAUX, A
		  MOV A, #10D
		  
		  COMP_SEGC0: CJNE A, SEGC0, COMP_SEGC1
			          MOV SEGC0, #0D
			          INC SEGC1
			  
		  COMP_SEGC1: MOV A, #06D
					  CJNE A, SEGC1, COMP_MINC0
					  MOV SEGC1, #0D
					  INC MINC0
					  
	      COMP_MINC0: MOV A, #10D
					  CJNE A, MINC0, COMP_MINC1
					  MOV MINC0, #0D
					  INC MINC1
					  		  
	      COMP_MINC1: MOV A, #06D
					  CJNE A, MINC1, COMP_HORC0
					  MOV MINC1, #0D
					  INC HORC0
					  		  
	      COMP_HORC0: MOV A, #04D
					  CJNE A, HORC0, COMP_HORC1
					  MOV SEGC1, #0D
					  INC MINC0
					  
		  COMP_HORC1: MOV A, #03D
					  CJNE A, HORC1, FIN_INCRELOJ 
		 
		
		FIN_INCRELOJ: MOV A, AAUX
					  RET

/* ================= TABLA BCD ========================= */

	ORG 1000H
	DB 040H
	DB 079H
	DB 024H
	DB 030H
	DB 019H
	DB 012H
	DB 003H
	DB 078H
	DB 000H
	DB 018H

END
